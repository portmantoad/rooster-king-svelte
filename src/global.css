@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Condensed:ital@1&display=swap');    

    body,html{ 
      padding:0; 
      margin:0; 
      height: 100%;
      --line-height: 1.5;
      line-height: var(--line-height);
      overflow-x: hidden;
    }

    html {
      box-sizing: border-box !important;
      font-size: max(calc(13px * var(--line-height)), calc((9px + .6vw) * var(--line-height)));
    }
    *, *:before, *:after {
      box-sizing: inherit;
    }

    body{
      font-size: calc(1rem / var(--line-height));
    }


    img{
      max-width: 100%;
      height: auto;
      justify-self: stretch;
    }


.spanheight{
  min-height: 100lvh;
}

.gridlayout{
  display: grid;
  grid-template-columns: calc((100vw - 50rem) / 2) repeat(12, 1fr) calc((100vw - 50rem) / 2); 
  gap: 0px min(1rem, 3.5vw); 
}

.autolayout{
  --left: 1fr;
  --right: 1fr;
  --top: 1fr;
  --bottom: 1fr;
  display: grid;
  grid-template-columns: var(--left) minmax(0,auto) var(--right); 
  grid-template-rows: var(--top) minmax(0,auto) var(--bottom);
  gap:0;
  width:100%;
}

  .autolayout > *{
    grid-column: 2 / span 1; 
    grid-row: 2 / span 1;
    margin:0;
  }


@supports (animation-range: cover) {
  .anim{
  --range: cover;
  --ease: linear;
  --timeline: view(); /* --section */
  --transform-x-start: 0;
  --transform-x-end: 0;
  --transform-y-start: 0;
  --transform-y-end: 0;
  --transform-scale-start: 1;
  --transform-scale-end: 1;
  --transform-rotate-start: 0deg;
  --transform-rotate-end: 0deg;
  --transform-skew-start: 0deg;
  --transform-skew-end: 0deg;
  --transform-range: var(--range);
  --transform-ease: var(--ease);
  --transform-timeline: var(--timeline);
  --filter-start: initial;
  --filter-end: initial;
  --filter-range: var(--range);
  --filter-ease: var(--ease);
  --filter-timeline: var(--timeline);
  --parallax-speed: 1;
  --parallax-timeline: var(--timeline);

  --bonus-animation: thiscantbeempty;
  --bonus-animation-range: var(--range);
  --bonus-animation-timeline: var(--timeline);
  --bonus-animation-composition: replace;

  animation: 
    var(--transform-ease) anim_transform both, 
    var(--filter-ease) anim_filter both,
    linear anim_parallax both,
    var(--bonus-animation);

  animation-range:
    var(--transform-range),
    var(--filter-range),
    cover,
    var(--bonus-animation-range);

  animation-composition: add, add, add, var(--bonus-animation-composition);

  animation-timeline:
    var(--transform-timeline),
    var(--filter-timeline),
    var(--parallax-timeline),
    var(--bonus-animation-timeline);
  }
}


@keyframes anim_transform {
  0% {
    transform:skew(var(--transform-skew-start)) 
    translateX(var(--transform-x-start)) 
    translateY(var(--transform-y-start)) 
    scale(var(--transform-scale-start)) 
    rotate(var(--transform-rotate-start));
  } 100% { 
    transform:skew(var(--transform-skew-end)) 
    translateX(var(--transform-x-end)) 
    translateY(var(--transform-y-end)) 
    scale(var(--transform-scale-end)) 
    rotate(var(--transform-rotate-end));
  }
}
@keyframes anim_filter {0% {filter: var(--filter-start)} 100% { filter: var(--filter-end)}}
@keyframes anim_parallax {
      0% {
        translate: 0 calc(100vh * (var(--parallax-speed) - 1));
      }
      100% {
        translate: 0 calc(-100vh * (var(--parallax-speed) - 1));
      }
}
